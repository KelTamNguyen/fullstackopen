{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","nameValue","numberValue","handleSubmit","handleNewName","handleNewNumber","onSubmit","value","onChange","type","Person","persons","handleDelete","map","person","name","number","onClick","id","Filter","queryValue","handleQuery","baseUrl","axios","get","then","response","data","newPerson","post","delete","personObject","put","Notification","content","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","query","setQuery","notification","setNotification","useEffect","personService","intitialPersons","event","target","filter","toLowerCase","includes","preventDefault","existingPerson","find","undefined","returnedPerson","concat","setTimeout","catch","error","window","confirm","err","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30366353.chunk.js","sourcesContent":["import React from 'react'\r\nimport  '../index.css'\r\n\r\nexport default function PersonForm({ nameValue, numberValue,  handleSubmit, handleNewName, handleNewNumber }) {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label>name:</label> \r\n                <input value={nameValue} onChange={handleNewName} />\r\n            </div>\r\n            <div>\r\n                <label>number:</label> \r\n                <input value={numberValue} onChange={handleNewNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Person({ persons, handleDelete }) {\r\n    return (\r\n        persons.map(person => \r\n            <div>\r\n                <span><p key={person.number}>{person.name} {person.number}</p></span>\r\n                <button onClick={() => handleDelete(person.id, person.name)}>delete</button>\r\n            </div>\r\n        )\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Filter({ queryValue, handleQuery }) {\r\n    return (\r\n        <div>filter shown with: <input value={queryValue} onChange={handleQuery}></input></div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons';\r\n\r\nconst getPersons = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst createPerson = (newPerson) => {\r\n    const request = axios.post(baseUrl, newPerson);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`http://localhost:3001/persons/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst updatePerson = (personObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, personObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default { getPersons, createPerson, deletePerson, updatePerson }","import React from 'react'\r\nimport '../index.css'\r\n\r\nexport default function Notification({ content }) {\r\n    if (content === null) {\r\n        return null;\r\n    }\r\n\r\n    const {message, type} = content;\r\n\r\n    return (\r\n        <div className={type}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ query, setQuery ] = useState('');\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getPersons()\n      .then(intitialPersons => setPersons(intitialPersons))\n  }, [])\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleQuery = (event) => {\n    setQuery(event.target.value);\n    setPersons(persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase())))\n  }\n\n  const addNewPerson = (event) => {\n    event.preventDefault();\n\n    const existingPerson = persons.find(person => person.name === newName);\n    const newPerson = { name: newName, number: newNumber};\n\n    if (existingPerson === undefined) {\n      personService\n        .createPerson(newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson));\n            setNotification({message: `Added ${newPerson.name}`, type: 'success'});\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n            .catch(error => {\n              setNotification({message: 'missing name or number', type: 'error'})\n            })\n        })\n    } else {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          personService\n            .updatePerson(newPerson, existingPerson.id)\n            .then(() => {\n              personService\n                .getPersons()\n                .then(persons => {\n                  setPersons(persons);\n                  setNotification(`Updated ${existingPerson.name}`);\n                  setTimeout(() => {\n                    setNotification(null)\n                  }, 5000);\n                })\n            })\n            .catch(err => {\n              console.log(err);\n              setPersons(persons.filter(person => person.id !== existingPerson.id));\n              setNotification({message: `${existingPerson.name} has already been removed from server`, type: 'error'});\n            })\n        }\n    }\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const deletePerson = (id, name) => {\n    window.confirm(`Delete ${name}?`)\n    personService\n      .deletePerson(id)\n      .then(() => {\n        personService\n          .getPersons()\n          .then(persons => setPersons(persons))\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification content={notification} />\n      <Filter queryValue={query} handleQuery={handleQuery} />\n      <h2>Add a new</h2>\n      <PersonForm\n        nameValue={newName}\n        numberValue={newNumber}\n        handleSubmit={addNewPerson}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} handleDelete={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}